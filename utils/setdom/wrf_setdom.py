#!/usr/bin/env python

"""
This script used to edit the domain features in WRF's namelist.input after ./geogrid.exe.
This script doesn't do anything about setting domains, but just copying the features from geo_em.d*.nc to namelist.input by writing a NGS script.

Authors:
  Wenhan Tang - 11/2020 (Original Version)
  ...

"""

from glob import glob
import xarray as xr
import sys

distant_to_timestep_ratio = 0.006
#RunDir = "/home/tangwh/wrf-latlon/setdom/work"
#RunDir = sys.argv[1]

workDir = sys.argv[1]
nmlDirName = sys.argv[2]
ngsDirName = sys.argv[3]
StartDate = sys.argv[4]
StartTime = sys.argv[5]

def write_ngs_for_wrf_nml(mod_var_dic, ngsDirName, nmlDirName):
    with open(ngsDirName, "w") as ngsf:
        ngsf.write("# Generated by WRF-CO2-core setdom module\n")
        ngsf.write("open &: " + nmlDirName + "\n")
        for var in mod_var_dic:
            ngsf.write("mod &: " + var + " = " + str(mod_var_dic[var]) + "\n")
        ngsf.write("save &: " + nmlDirName + "\n")

if __name__ == "__main__":

    metfile_list = glob(workDir + "/met_em.d*." + StartDate + "_" + StartTime + ":00.nc")
#    print(metfile_list)
    max_dom = len(metfile_list)

    var_dict = {"max_dom" : max_dom, "e_we" : [], "e_sn" : [], "dx" : [], "dy" : [], "grid_id" : [], "parent_id" : [], "i_parent_start" : [], "j_parent_start" : [], "parent_grid_ratio" : [], "num_metgrid_levels" : [], "num_metgrid_soil_levels" : []}

    metfile_dict = {}
    for metfile_dir in metfile_list:
        key = metfile_dir.split("/")[-1][7:10]
        metfile_dict[key] = metfile_dir

    for idom in range(max_dom):
        key = "d" + str(idom + 1).zfill(2)
        metfile_dir = metfile_dict[key]
        ds = xr.open_dataset(metfile_dir)
        var_dict["e_we"].append( ds.attrs["WEST-EAST_GRID_DIMENSION"] )
        var_dict["e_sn"].append( ds.attrs["SOUTH-NORTH_GRID_DIMENSION"] )
        var_dict["dx"].append( ds.attrs["DX"] )
        var_dict["dy"].append( ds.attrs["DY"] )
        var_dict["grid_id"].append( ds.attrs["grid_id"] )
        var_dict["parent_id"].append( ds.attrs["parent_id"] )
        var_dict["i_parent_start"].append( ds.attrs["i_parent_start"] )
        var_dict["j_parent_start"].append( ds.attrs["j_parent_start"] )
        var_dict["parent_grid_ratio"].append( ds.attrs["parent_grid_ratio"] )
        if idom == 0:
            var_dict["num_metgrid_levels"].append( ds.attrs["BOTTOM-TOP_GRID_DIMENSION"] )
            var_dict["num_metgrid_soil_levels"].append( ds.attrs["NUM_METGRID_SOIL_LEVELS"] )

    var_dict["parent_time_step_ratio"] = var_dict["parent_grid_ratio"].copy()
    #var_dict["time_step"] = round(var_dict["dx"][0] * distant_to_timestep_ratio)
    #print(var_dict)
    #ngsDirName = RunDir + "/nml-wrf.ngs"
    #nmlDirName = RunDir + "/nml-wrf"
    write_ngs_for_wrf_nml(var_dict, ngsDirName, nmlDirName)
