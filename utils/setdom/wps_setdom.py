#!/usr/bin/env python
# Authors:
#   Wenhan TANG - 11/2020
#   ...

import f90nml as nml
from setdomlib import *
import sys
from pdb import set_trace
#RunDir = "/home/tangwh/wrf-latlon/setdom/work"
#domType = "Maryland"
#RunDir = sys.argv[1]
#domType = sys.argv[2]

configDirName = sys.argv[1]
nmlDirName = sys.argv[2] #RunDir + "/nml-wps"
ngsDirName = sys.argv[3] #RunDir + "/nml-wps.ngs"
domType = sys.argv[4]

def set_domain(domain_config_dic):
    dom_list = []
    max_dom = len(domain_config_dic)
    for idom in range(1, max_dom + 1):
        idom_name = "d" + str(idom).zfill(2)
        assert idom_name in domain_config_dic, "main_setdom: Could not find " + idom_name
        assert idom_name == domain_config_dic[idom_name]["name"], "main_setdom: key word: " + idom_name + " conflicts with name of domain object: " + domain_config_dic[idom_name]["name"]
        dom = domain(domain_config_dic[idom_name])
        if idom != 1:
            dom.nesting(dom_list)
        dom_list.append(dom)
    return dom_list

def write_ngs_for_wps_nml(dom_list, ngsDirName, nmlDirName):
    mod_var_dic = {}
    mod_var_dic["max_dom"] = len(dom_list)
    mod_var_dic["parent_id"] = [dom.pid for dom in dom_list]
    mod_var_dic["parent_grid_ratio"] = [dom.parent_ratio for dom in dom_list]
    mod_var_dic["i_parent_start"] = [dom.ips for dom in dom_list]
    mod_var_dic["j_parent_start"] = [dom.jps for dom in dom_list]
    mod_var_dic["e_we"] = [dom.nx for dom in dom_list]
    mod_var_dic["e_sn"] = [dom.ny for dom in dom_list]
    mod_var_dic["dx"] = dom_list[0].dlon
    mod_var_dic["dy"] = dom_list[0].dlat
    mod_var_dic["map_proj"] = "\"lat-lon\""
    mod_var_dic["ref_lat"] = dom_list[0].lat_c
    mod_var_dic["ref_lon"] = dom_list[0].lon_c
    mod_var_dic["stand_lon"] = dom_list[0].lon_c
    with open(ngsDirName, "w") as ngsf:
        ngsf.write("# Generated by WRF-CO2-core setdom module\n")
        ngsf.write("open &: " + nmlDirName + "\n")
        for var in mod_var_dic:
            ngsf.write("mod &: " + var + " = " + str(mod_var_dic[var]) + "\n")
        ngsf.write("save &: " + nmlDirName + "\n")

if __name__ == "__main__":
    
    nml_file = nml.read(configDirName)
    assert domType in nml_file, "domain type: " + domType + " not be found."
    nml_dic = nml_file[domType]
    max_dom = nml_dic["max_dom"]
    xs = nml_dic["xs"]
    xe = nml_dic["xe"]
    ys = nml_dic["ys"]
    ye = nml_dic["ye"]
    dx = nml_dic["dx"]
    dy = nml_dic["dy"]
    assert len(xs) >= max_dom and len(xe) >= max_dom and len(ys) >= max_dom and len(ye) >= max_dom and len(dx) >= max_dom and len(dy) >= max_dom, "namelist.setdom: args number error."
    domain_config_dic = {}
    for idom in range(max_dom):
        domain_name = "d" + str(idom + 1).zfill(2)
        domain_config_dic[domain_name] = {"lon_s" : xs[idom], "lon_e" : xe[idom], "lat_s" : ys[idom], "lat_e" : ye[idom], "dlon" : dx[idom], "dlat" : dy[idom], "name" : domain_name}
    dom_list = set_domain(domain_config_dic)
    for idom, dom in enumerate(dom_list):
        print("Configure of domain: d" + str(idom + 1).zfill(2))
        print(dom)
    write_ngs_for_wps_nml(dom_list, ngsDirName, nmlDirName)

